plugins {
  alias libs.plugins.license

  alias libs.plugins.febit.java
  alias libs.plugins.febit.maven.publish
  alias libs.plugins.febit.codegen.module
}

group 'org.febit'
version '3.0.0'

description = 'Febit Commons'

ext {
}

allprojects {
  apply plugin: 'com.github.hierynomus.license'

  group rootProject.group
  version rootProject.version

  repositories {
    maven { url "https://maven.aliyun.com/repository/central" }
  }

  standardMavenPublish {
    pom {
      customPom(it)
    }
  }

  codegenModule {
    defaultTemplate = fromFile("$rootDir/etc/module.java.tmpl")
  }

  license {
    mapping {
      java = 'SLASHSTAR_STYLE'
    }
    include '**/*.java'
    strictCheck false
    skipExistingHeaders false
    header rootProject.file('etc/license-header.txt')
  }
}

configure(subprojects.findAll {
  !it.name.endsWith('-bom')
}) {
  apply plugin: 'java-library'

  java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    withJavadocJar()
    withSourcesJar()
  }

  test {
    useJUnitPlatform()
  }

  dependencies {

    if (project.name != 'febit-annotations-optional') {
      compileOnly project(':febit-annotations-optional')
      testCompileOnly project(':febit-annotations-optional')
    }

    testImplementation 'org.slf4j:slf4j-simple'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  }

  dependencyManagement {
    resolutionStrategy {
      cacheChangingModulesFor 0, 'seconds'
    }
    imports {
      mavenBom "${libs.jackson.bom.get()}"
      mavenBom "${libs.junit.bom.get()}"
      mavenBom "${libs.assertj.bom.get()}"
      mavenBom "${libs.mockito.bom.get()}"
    }
    dependencies {
      dependencySet(group: 'org.slf4j', version: "${libs.versions.slf4j.get()}") {
        entry 'slf4j-api'
        entry 'slf4j-simple'
      }

      dependency "${libs.jsr305.get()}"
      dependency "${libs.spotbugs.annotations.get()}"
      dependency "${libs.annotation.api.get()}"

      dependency "${libs.commons.io.get()}"
      dependency "${libs.commons.codec.get()}"
      dependency "${libs.commons.lang3.get()}"
      dependency "${libs.commons.collections4.get()}"
      dependency "${libs.commons.compress.get()}"
      dependency "${libs.commons.exec.get()}"

      dependency "${libs.kafka.clients.get()}"
      dependency "${libs.snakeyaml.get()}"
      dependency "${libs.jcommander.get()}"
      dependency "${libs.jsonpath.get()}"
      dependency "${libs.hamcrest.get()}"
    }
  }
}

def customPom(MavenPom pom) {
  pom.with {
    name.set project.name
    description.set project.description
    url.set 'https://github.com/febit/febit-common'
    organization {
      name = 'Febit'
      url = 'https://github.com/febit'
    }
    licenses {
      license {
        name = 'Apache License, Version 2.0'
        url = 'https://github.com/febit/febit-common/blob/master/LICENSE.txt'
        distribution = 'repo'
      }
    }
    scm {
      url = 'https://github.com/febit/febit-common'
      connection = 'scm:git:https://github.com/febit/febit-common.git'
      developerConnection = 'scm:git:https://github.com/febit/febit-common.git'
    }
    issueManagement {
      system = 'GitHub'
      url = 'https://github.com/febit/febit-common/issues'
    }
    developers {
      developer {
        id = 'zqq'
        name = 'Zhu Qingqing'
        email = 'zqq@febit.org'
        timezone = '+8'
      }
    }
  }
}
